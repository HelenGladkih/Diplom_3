import allure 
from data import *


@allure.feature("Восстановление пароля")
class TestPassRestore:

    @allure.title('Проверка перехода на страницу восстановления пароля')
    @allure.description('''
    Проверка корректности перехода на страницу восстановления пароля:
    * Должна быть возможность перейти на страницу восстановления пароля с главной страницы авторизации
    * После перехода должен отображаться корректный заголовок страницы
    ''')
    def test_access_recovery_page(self, auth_page):
        title = auth_page.go_to_restore()
        assert title == "Восстановление пароля", "Неверный заголовок страницы восстановления пароля"


    @allure.title('Проверка процесса восстановления пароля')
    @allure.description('''
    Проверка полного цикла восстановления пароля:
    * Система должна запрашивать email пользователя
    * После ввода email система должна переходить на этап ввода кода подтверждения
    * Должно отображаться соответствующее сообщение о необходимости ввода кода
    ''')
    def test_password_recovery_via_email(self, auth_page, new_user):
        email = new_user[0].get('email')
        restore_code_text = auth_page.restore_pass(email)
        assert restore_code_text == 'Введите код из письма', "Не отображается сообщение о вводе кода"


    @allure.title('Проверка видимости поля ввода пароля')
    @allure.description('''
    Проверка функционала показа/скрытия пароля:
    * При клике на иконку глаза поле пароля должно менять свое состояние
    * Должна изменяться подсветка/стиль поля при изменении его видимости
    ''')
    @allure.step("Проверка переключения видимости поля пароля")
    def test_password_visibility_toggle(self, auth_page):
        assert auth_page.is_pass_visible(), "Не произошло изменений в отображении поля пароля" 
